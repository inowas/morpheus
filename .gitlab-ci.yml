stages:
  - test
  - build
  - publish
  - deploy

image: docker:20.10.16

services:
  - docker:20.10.16-dind
  - node:20

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

test-frontend:
  image: node:20
  stage: test

  script:
    - cd src/frontend
    - make install-ci
    - make test-ci

build-frontend:dev:
  image: node:20
  stage: build

  script:
    - cd src/frontend
    - make install-ci
    - make build
    - make build-modflow

  artifacts:
    paths:
      - src/frontend/dist/
    expire_in: 1 days

  only:
    - main

publish-frontend:dev:
  stage: publish
  dependencies:
    - build-frontend:dev

  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE_FRONTEND:dev --file frontend/docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE_FRONTEND:dev
  only:
    - main

deploy-frontend:dev:
  image: ubuntu:22.04
  stage: deploy
  dependencies:
    - publish-frontend:dev
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
  script:
    - ssh -p22 root@$URL_DEVELOPMENT_SERVER "cd $DEVELOPMENT_PATH && docker compose down"
    - scp -P22 ./infrastructure/development/docker-compose.yml root@$URL_DEVELOPMENT_SERVER:/$DEVELOPMENT_PATH/docker-compose.yml
    - ssh -p22 root@$URL_DEVELOPMENT_SERVER "cd $DEVELOPMENT_PATH && docker compose pull"
    - ssh -p22 root@$URL_DEVELOPMENT_SERVER "cd $DEVELOPMENT_PATH && docker compose up -d --force-recreate"
  environment:
    name: development
    url: https://dev.morpheus.inowas.hydro.tu-dresden.de
  only:
    - main

build-frontend:prod:
  image: node:20
  stage: build
  script:
    - cd src/frontend
    - make install-ci
    - make build
    - make build-modflow
  artifacts:
    paths:
      - src/frontend/dist/
    expire_in: 1 days
  only:
    - tags

publish-frontend:prod:
  stage: publish
  dependencies:
    - build-frontend:prod

  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE_FRONTEND:latest --file frontend/docker/Dockerfile .
    - docker push $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE_FRONTEND:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE_FRONTEND:latest
  only:
    - tags

deploy-frontend:prod:production:
  image: ubuntu:22.04
  stage: deploy
  dependencies:
    - build-frontend:prod
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
  script:
    - ssh -p22 $URL_PRODUCTION_SERVER "cd $PRODUCTION_PATH && docker-compose down"
    - scp -P22 ./infrastructure/production/docker-compose.yml $URL_PRODUCTION_SERVER:/$PRODUCTION_PATH/docker-compose.yml
    - ssh -p22 $URL_PRODUCTION_SERVER "cd $PRODUCTION_PATH && docker compose pull"
    - ssh -p22 $URL_PRODUCTION_SERVER "cd $PRODUCTION_PATH && docker compose up -d --force-recreate"
  environment:
    name: production
    url: https://morpheus.inowas.hydro.tu-dresden.de
  only:
    - tags
