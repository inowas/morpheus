---
- name: Check if docker key exists
  stat:
    path: /etc/apt/keyrings/docker.gpg
  register: docker_gpg

- name: Create APT keyring directory
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'
    owner: root
    group: root

# TODO: cleanup docker.asc
- name: Download docker armored signature
  get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /tmp/docker.asc
  when: not docker_gpg.stat.exists

# TODO: Make sure gnupg/gnupg2 is installed
- name: Dearmor docker asc
  command: /usr/bin/gpg --dearmor -o /etc/apt/keyrings/docker.gpg /tmp/docker.asc
  when: not docker_gpg.stat.exists

- name: Add docker apt repository.
  apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
    state: present
    update_cache: yes
    filename: docker

- name: Install container runtime package dependencies
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg2
    - lsb-release
    - software-properties-common
    - containerd.io
  tags: package_dependencies

- name: Configure containerd
  shell: |
    sudo mkdir -p /etc/containerd
    sudo containerd config default | sudo tee /etc/containerd/config.toml

- name: Ensure containerd service is force restarted and enabled
  ansible.builtin.systemd:
    name: containerd
    enabled: yes
    state: restarted
    force: yes

- name: show status of containerd
  command: systemctl status containerd
  register: containerd_status
  tags: containerd_status

- debug:
    var: containerd_status.stdout
