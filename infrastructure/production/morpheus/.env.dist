COMPOSE_PROJECT_NAME=morpheus_production
DOMAIN=inowas.com

# backend
BACKEND_HOST=api.morpheus.${DOMAIN}
BACKEND_VERSION=dev

# frontend
FRONTEND_HOST=${DOMAIN}
FRONTEND_VERSION=dev

# identity
IDENTITY_HOST=identity.${DOMAIN}

# Certificate resolver
# possible values:
# - letsencrypt: use Let's Encrypt to generate certificates
# - tud-resolver: use the resolver provided by TU-Dresden
TRAEFIK_CERT_RESOLVER=letsencrypt
TRAEFIK_NETWORK=traefik

# backend task queue
RABBITMQ_DEFAULT_USER=dev
RABBITMQ_DEFAULT_PASS=dev
RABBITMQ_DEFAULT_VHOST=dev.rabbitmq.${DOMAIN}

# backend flask app
BACKEND_APP_ROOT_PATH=/app
BACKEND_SECRET_KEY=bbf8485d7ccec0d7fd9027da3d065e509fb55db23c70774c

# keycloak
BACKEND_KEYCLOAK_CLIENT_ID=admin
BACKEND_KEYCLOAK_CLIENT_SECRET=BaR9zZ7yhcDlBbfu9cH43xu4rQg82S17
BACKEND_KEYCLOAK_REALM=inowas_dev
BACKEND_KEYCLOAK_SERVER_URL=https://${IDENTITY_HOST}

# backend mongo
BACKEND_MONGO_INITDB_ROOT_USERNAME=root
BACKEND_MONGO_INITDB_ROOT_PASSWORD=dev-root
BACKEND_MONGO_HOST=mongodb_backend
BACKEND_MONGO_PORT=27017
BACKEND_MONGO_USER=dev
BACKEND_MONGO_PASSWORD=dev

# Project Module
BACKEND_MONGO_PROJECT_DATABASE=project_data
BACKEND_MORPHEUS_PROJECT_ASSET_DATA=/mnt/project/assets
BACKEND_MORPHEUS_PROJECT_CALCULATION_DATA=/mnt/project/calculations

# Sensor Module
BACKEND_MONGO_SENSOR_DATABASE=sensor_data
BACKEND_MORPHEUS_SENSOR_LOCAL_DATA=/mnt/sensors

# Celery
BACKEND_CELERY_BROKER=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbitmq:5672/${RABBITMQ_DEFAULT_VHOST}
BACKEND_CELERY_RESULT_BACKEND=rpc://

# Optional
BACKEND_MORPHEUS_SENSORS_UIT_FTP_HOST=ftp
BACKEND_MORPHEUS_SENSORS_UIT_FTP_USER=dev
BACKEND_MORPHEUS_SENSORS_UIT_FTP_PASSWORD=dev
BACKEND_MORPHEUS_SENSORS_UIT_FTP_PATH=/
