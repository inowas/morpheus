openapi: 3.1.0
info:
  title: INOWAS API - Modflow Module
  version: 2.0.0
paths:
  /users:
    get:
      tags:
        - User
      summary: Read list of Users
      description: Read list of Users
      responses:
        200:
          description: List of Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserListItem'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error
    post:
      tags:
        - User
      summary: Create a new user
      description: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        201:
          description: Modflow model was successfully created
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      tags:
        - User
      summary: Read a user
      description: Read a user
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListItem'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error
    put:
      tags:
        - User
      summary: Update a user
      description: Update a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserListItem'
      responses:
        204:
          description: User was successfully updated
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error
    delete:
      tags:
        - User
      summary: Delete a user
      description: Delete a user
      responses:
        204:
          description: User was successfully deleted
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
        500:
          description: Internal Server Error


components:
  parameters:
    UserId:
      name: user_id
      in: path
      description: "The id of a User."
      required: true
      schema:
        type: string
        example: "5f1b0b9e-0b0b-4b0b-8b0b-0b0b0b0b0b0b"
  schemas:
    CreateProjectRequest:
      type: object
      description: "The Request to create a new Modflow Project."
      properties:
        name:
          type: string
          description: "The name of the project."
          example: "My first project"
        description:
          type: string
          description: "The description of the project."
          example: "This is my first project"
        tags:
          type: array
          description: "The tags of the project."
          items:
            type: string
          example: [ "tag1", "tag2" ]
      required:
        - name
        - description
        - tags



    CreateUserRequest:
      type: object
      description: "The Request to create a new User."
      properties:
        username:
          type: string
          description: "The username of the user."
          example: "user1"
        email:
          type: string
          description: "The email of the user."
          example: ""
        full_name:
          type: string
          description: "The email of the user."
          example: ""

    UserListItem:
      type: object
      description: "A list item of a user."
      properties:
        user_id:
          type: string
          description: "The id of the user."
          example: "5f1b0b9e-0b0b-4b0b-8b0b-0b0b0b0b0b0b"
        username:
          type: string
          description: "The username of the user."
          example: "user1"
        email:
          type: string
          description: "The email of the user."
          example: "user1@inowas.com"
        full_name:
          type: string
          description: "The full name of the user."
          example: "User One"
        is_superuser:
          type: boolean
          description: "A flag to indicate if the user is a superuser."
          example: false
        status:
          enum: [ "active", "inactive" ]
          type: string
          description: "The status of the user."
          example: "active"

