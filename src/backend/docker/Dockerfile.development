FROM python:3.11-bookworm as build

ADD src/backend /app
WORKDIR /app
RUN python -m venv /app/.venv

RUN pip install --upgrade pip
RUN pip install -r /app/requirements/dev.txt


FROM build as development

# install mkcert and the CA certificate for local development

ARG MKCERT_ROOT_CA_CERTIFICATE
ARG CAROOT

RUN curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64" \
    && chmod +x mkcert-v*-linux-amd64 \
    && cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert

COPY ${MKCERT_ROOT_CA_CERTIFICATE} ${CAROOT}/
RUN mkcert -install
# make python requests library use the system trust store
RUN pip install pip_system_certs

# prepare user flask

ARG FLASK_USER_ID
ARG FLASK_GROUP_ID

RUN addgroup --system --gid ${FLASK_GROUP_ID} flask
RUN adduser --uid ${FLASK_USER_ID} --gid ${FLASK_GROUP_ID} --system flask

# prepare mount point for user flask
RUN mkdir -p /mnt/sensors
RUN chown -R flask:flask /mnt

# prepare environment for flask app
ENV PYTHONUNBUFFERED 1
ENV FLASK_ENV development
ENV FLASK_DEBUG 1
ENV FLASK_APP wsgi:app

USER flask
WORKDIR /app/src
ENTRYPOINT ["/app/docker/docker-entrypoint.sh"]

EXPOSE 8000
