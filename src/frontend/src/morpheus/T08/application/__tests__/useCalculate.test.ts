import {renderHook} from '@testing-library/react-hooks';
import useCalculate from '../useCalculate';

const diagramDataExpectedValues = [
  {x: 0, C: 1},
  {x: 2.4, C: 0.9756153303677039},
  {x: 4.8, C: 0.8856135966518381},
  {x: 7.199999999999999, C: 0.6959985900333833},
  {x: 9.6, C: 0.44085969125834773},
  {x: 12, C: 0.21303483856904648},
  {x: 14.4, C: 0.07570371371307763},
  {x: 16.8, C: 0.019329779564991954},
  {x: 19.2, C: 0.003495125067273279},
  {x: 21.599999999999998, C: 0.00044310896312043},
  {x: 23.999999999999996, C: 0.00003678288051799462},
  {x: 26.399999999999995, C: 0.0000015570067783410302},
  {x: 28.799999999999994, C: 6.49934246976791e-8},
  {x: 31.199999999999992, C: 1.8785383804065248e-9},
  {x: 33.599999999999994, C: 3.752248511901257e-11},
  {x: 35.99999999999999, C: 5.171418848703979e-13},
  {x: 38.39999999999999, C: 4.884981308350689e-15},
  {x: 40.79999999999999, C: 5.551115123125783e-17},
  {x: 43.19999999999999, C: 0},
  {x: 45.59999999999999, C: 0},
  {x: 47.999999999999986, C: 0},
  {x: 50.399999999999984, C: 0},
  {x: 52.79999999999998, C: 0},
  {x: 55.19999999999998, C: 0},
  {x: 57.59999999999998, C: 0},
  {x: 59.99999999999998, C: 0}];
const diagramDataExpectedValues2 = [{t: 0, C: 0},
  {t: 13, C: 0.000013140847941194974},
  {t: 26, C: 0.012869360771486106},
  {t: 39, C: 0.11089433513124626},
  {t: 52, C: 0.29328414801576863},
  {t: 65, C: 0.48817466013454897},
  {t: 78, C: 0.6508025758663112},
  {t: 91, C: 0.7705563014873199},
  {t: 104, C: 0.8528252358091276},
  {t: 117, C: 0.9070631585895553},
  {t: 130, C: 0.9419175479750479},
  {t: 143, C: 0.9639503521955469},
  {t: 156, C: 0.9777283660316674},
  {t: 169, C: 0.9862824903160387},
  {t: 182, C: 0.9915678279126136},
  {t: 195, C: 0.9948230485428258},
  {t: 208, C: 0.9968237594439506},
  {t: 221, C: 0.9980518369944225},
  {t: 234, C: 0.9988051018040505},
  {t: 247, C: 0.999266976765971},
  {t: 260, C: 0.9995501694493579},
  {t: 273, C: 0.9997238342433467},
  {t: 286, C: 0.9998303661662108},
  {t: 299, C: 0.9998957444495261},
  {t: 312, C: 0.9999358871796453},
  {t: 325, C: 0.9999605489119303},
  {t: 338, C: 0.9999757089245122}];

describe('test custom Hook', () => {
  it('render Hook', () => {
    const {result} = renderHook(() => useCalculate());
    expect(result.current.calcC(365, 0, 0.02253913043478261, 1, 0.02080361739130435)).toBe(1);
    expect(result.current.calcCTau(365, 40.79999999999999, 0.02253913043478261, 1, 0.02080361739130435, 100)).toBe(5.551115123125783e-17);
    expect(result.current.calculateVx(2.592, 0.23, 0.002)).toBe(0.02253913043478261);
    expect(result.current.calculateDL(0.923, 0.02253913043478261)).toBe(0.02080361739130435);
    expect(result.current.calculateR(0.35, 0.063)).toBe(1.31005);
    expect(result.current.calculateDiagramData({
      retardation: true,
      case: 1,
      infiltration: 2,
    }, 0.02253913043478261, 0.02080361739130435, 1, 100, 10, 365, 100)).toStrictEqual(diagramDataExpectedValues);
    expect(result.current.calculateDiagramData({
      retardation: true, case: 2, infiltration: 1,
    }, 0.7606782608695651, 3.2001734434782603, 1.3105108695652175, 430.93, 42, 365, 371)).toStrictEqual(diagramDataExpectedValues2);
  });
});


